{"version":3,"sources":["components/headerComponent/index.js","assets/images/indianFlag.png","components/bodyComponent/index.js","covid19TrackerApi/index.js","components/commonComponent/index.js","App.js","index.js"],"names":["HeaderComponent","AppBar","position","style","background","indigo","Toolbar","IconButton","edge","color","aria-label","Typography","variant","renderGraph","labels","title","data","bgColor","borderColor","ctx","document","getElementById","getContext","Chart","type","datasets","label","backgroundColor","borderWidth","options","scales","yAxes","gridLines","ticks","beginAtZero","callback","index","dataOfLabels","xAxes","responsive","maintainAspectRatio","BodyComponent","useState","globalCases","setGlobalCases","indianCases","setIndianCases","graphFetched","setGraphFetched","useEffect","axios","get","then","Global","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","cases_time_series","forEach","item","i","date","Date","currentMonth","getMonth","currentYear","getFullYear","dailyconfirmed","regionalCases","Object","keys","map","blue","Box","mt","mr","ml","Grid","container","spacing","xs","sm","gutterBottom","entries","length","key","value","Card","raised","CardContent","paddingRight","component","align","renderDisplayCard","start","end","duration","red","green","display","flexDirection","justifyContent","alignItems","height","width","CircularProgress","p","src","Flag","alt","blueGrey","lineHeight","id","App","className","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.036cf123.chunk.js","sourcesContent":["import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core'\r\nimport { indigo } from '@material-ui/core/colors'\r\nimport BubbleChartOutlinedIcon from '@material-ui/icons/BubbleChartOutlined'\r\n\r\nconst HeaderComponent = () => {\r\n  return (\r\n    <AppBar position='static' style={{ background: indigo['A400'] }}>\r\n      <Toolbar>\r\n        <IconButton edge='start' color='inherit' aria-label='menu'>\r\n          <BubbleChartOutlinedIcon />\r\n        </IconButton>\r\n        <Typography variant='h6'>COVID-19 Tracker</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default HeaderComponent\r\n","export default __webpack_public_path__ + \"static/media/indianFlag.7c92a5aa.png\";","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Box,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { getGlobalSummary, getRegionalSummary } from '../../covid19TrackerApi'\r\nimport { renderDisplayCard } from '../commonComponent'\r\nimport { blue, red, green, blueGrey } from '@material-ui/core/colors'\r\nimport CountUp from 'react-countup'\r\nimport Flag from '../../assets/images/indianFlag.png'\r\nimport Chart from 'chart.js'\r\n\r\nconst BodyComponent = () => {\r\n  const [globalCases, setGlobalCases] = useState({})\r\n  const [indianCases, setIndianCases] = useState([])\r\n  const [graphFetched, setGraphFetched] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getGlobalSummary().then(({ data: { Global } }) => {\r\n      setGlobalCases({\r\n        'New Cases': Global.NewConfirmed,\r\n        'Total Cases': Global.TotalConfirmed,\r\n        'New Deaths': Global.NewDeaths,\r\n        'Total Deaths': Global.TotalDeaths,\r\n        'New Recovery': Global.NewRecovered,\r\n        'Total Recovery': Global.TotalRecovered,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    !graphFetched &&\r\n      getRegionalSummary().then(({ data: { cases_time_series } }) => {\r\n        const data = {}\r\n\r\n        cases_time_series.forEach((item, i) => {\r\n          const date = new Date(item.date)\r\n          const currentMonth = date.getMonth()\r\n          const currentYear = date.getFullYear()\r\n\r\n          if (!data[currentYear]) {\r\n            data[currentYear] = {}\r\n          }\r\n          if (!data[currentYear][currentMonth]) {\r\n            data[currentYear][currentMonth] = +item.dailyconfirmed\r\n          } else {\r\n            data[currentYear][currentMonth] += +item.dailyconfirmed\r\n          }\r\n        })\r\n        const regionalCases = Object.keys(data['2021']).map((item, i) => {\r\n          return data['2021'][item]\r\n        })\r\n        setIndianCases(regionalCases)\r\n        setGraphFetched(true)\r\n      })\r\n    renderGraph({\r\n      labels: [\r\n        'jan',\r\n        'feb',\r\n        'mar',\r\n        'apr',\r\n        'may',\r\n        'jun',\r\n        'jul',\r\n        'aug',\r\n        'sep',\r\n        'oct',\r\n        'nov',\r\n        'dec',\r\n      ],\r\n      title: 'Covid Cases',\r\n      data: indianCases,\r\n      bgColor: blue[200],\r\n      borderColor: blue[800],\r\n    })\r\n  }, [graphFetched, indianCases])\r\n\r\n  return (\r\n    <Box mt={2} mr={2} ml={2}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography variant='h6' gutterBottom style={{ color: blue[700] }}>\r\n            Global Status\r\n          </Typography>\r\n        </Grid>\r\n        {!Object.entries(globalCases).length ? (\r\n          <Box\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              height: '200px',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <Typography variant='body1' color='textSecondary' align='center'>\r\n              Loading Global State ...\r\n            </Typography>\r\n            <br />\r\n            <CircularProgress color='secondary'></CircularProgress>\r\n          </Box>\r\n        ) : (\r\n          Object.entries(globalCases).map((item, i) =>\r\n            renderDisplayCard({\r\n              key: item[0],\r\n              value: <CountUp start={0} end={item[1]} duration={2} />,\r\n              index: i,\r\n              color:\r\n                item[0] === 'New Cases'\r\n                  ? blue[500]\r\n                  : item[0] === 'Total Cases'\r\n                  ? blue[500]\r\n                  : item[0] === 'New Deaths'\r\n                  ? red[500]\r\n                  : item[0] === 'Total Deaths'\r\n                  ? red[500]\r\n                  : green[500],\r\n            })\r\n          )\r\n        )}\r\n      </Grid>\r\n      <Box mt={4}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12}>\r\n            <Typography variant='h6' gutterBottom style={{ color: blue[700] }}>\r\n              Regional Status\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <Box p={(1, 1)} style={{ display: 'flex' }}>\r\n              <img src={Flag} alt='Flag' width='40' height='auto' />\r\n              <Typography\r\n                variant='body1'\r\n                component='h6'\r\n                style={{ color: blueGrey[700], lineHeight: '50px' }}\r\n              >\r\n                India\r\n              </Typography>\r\n            </Box>\r\n            <CardContent>\r\n              <canvas id='myChart' width='400' height='400'></canvas>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport const renderGraph = ({ labels, title, data, bgColor, borderColor }) => {\r\n  let ctx = document.getElementById('myChart').getContext('2d')\r\n  let myChart = new Chart(ctx, {\r\n    type: 'line',\r\n    data: {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: title,\r\n          data: data,\r\n          backgroundColor: bgColor,\r\n          borderColor: borderColor,\r\n          borderWidth: 3,\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              color: 'rgba(0, 0, 0, 0)',\r\n            },\r\n            ticks: {\r\n              beginAtZero: true,\r\n              callback: function (label, index, dataOfLabels) {\r\n                return label / 1000000 + 'm'\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              color: 'rgba(0, 0, 0, 0)',\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n    },\r\n  })\r\n  return myChart\r\n}\r\nexport default BodyComponent\r\n","import axios from 'axios'\r\n\r\nexport const getGlobalSummary = () => {\r\n  return axios.get('https://api.covid19api.com/summary')\r\n}\r\n\r\nexport const getRegionalSummary = () => {\r\n  return axios.get('https://api.covid19india.org/data.json')\r\n}\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core'\r\n\r\nexport const renderDisplayCard = ({ key, value, index, color }) => (\r\n  <Grid item xs={6} sm={3} key={index}>\r\n    <Card raised>\r\n      <CardContent>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs='auto'\r\n            style={{ background: color, paddingRight: '5px' }}\r\n          ></Grid>\r\n          <Grid item xs={11}>\r\n            <Typography\r\n              variant='body1'\r\n              component='h6'\r\n              align='center'\r\n              color='textSecondary'\r\n              gutterBottom\r\n            >\r\n              {key}\r\n            </Typography>\r\n            <Typography\r\n              variant='h5'\r\n              component='h5'\r\n              align='center'\r\n              style={{ color: color }}\r\n            >\r\n              {value}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  </Grid>\r\n)\r\n","import HeaderComponent from './components/headerComponent'\nimport BodyComponent from './components/bodyComponent'\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <HeaderComponent />\n      <BodyComponent />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}